#include <cstdio>
#include <cstring>
#include <queue>
#include <vector>
#define MAX_S 10001
using namespace std;

vector<int> map[MAX_S];
bool visited[MAX_S];
int N, M;
void makeEdge(int a, int b) {
	map[b].push_back(a);
}
int bfs(int u) {
	int cnt = 0, len;
	queue<int> q;
	q.push(u);
	int v, i;
	visited[u] = true;
    while (!q.empty()) {
		v = q.front();
		q.pop();
		len = map[v].size();
		for (i = 0; i < len; i++) {
			int val = map[v].at(i);
			if (visited[val] == false) {
				visited[val] = true;
				q.push(val);
				cnt++;
			}
		}
	}
	return cnt;
}
int main() {
	int i, j, a, b, max_Cnt = -1, cur_Cnt;	
        vector<int> v;
	scanf("%d %d", &N, &M);
	for (i = 1; i <= M; i++) {
		scanf("%d %d", &a, &b);
		makeEdge(a, b);
	}
	for (i = 1; i <= N; i++) {
		cur_Cnt = bfs(i);
		memset(visited, false, sizeof visited);
		if (cur_Cnt > max_Cnt) {
			max_Cnt = cur_Cnt;
                        v.resize(0);			
                        v.push_back(i);
		}else if(cur_Cnt == max_Cnt){
                        v.push_back(i);
        }
    }
	int len = v.size();
	for (i = 0; i < len; i++) {
		printf("%d ", v.at(i));
	}
	printf("\n");
	return 0;
}
